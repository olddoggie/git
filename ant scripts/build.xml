<?xml version="1.0" encoding="UTF-8"?>

<!-- ================== This script used for simple local build, generating a war file -->

<project name="cs" default="warbuild">

	<property name="dir.src" value="../"/>
	<property name="dir.deploy" value="D:\cs_app\war" />
	<property name="dir.tomcat" value="E:\Software\apache-tomcat-6.0.33"/>

	<property name="dir.src.java" value="${dir.src}/src"/>
	<property name="dir.src.war" value="${dir.src}/war"/>
	<property name="dir.src.WEB-INF" value="${dir.src}/war/WEB-INF"/>
	<property name="dir.dist" value="${dir.src}/dist"/>
	<property name="dir.lib" value="${dir.src}/war/WEB-INF/lib"/>
	<property name="dir.lib.compile" value="${dir.src}/lib/compile"/>
	<property name="dir.lib.test" value="${dir.src}/lib/test"/>
	
	<property name="dir.src.test" value="${dir.src}/test"/>
	<property name="dir.src.UT" value="${dir.src.test}/UT"/>
	<property name="dir.src.IT" value="${dir.src.test}/IT"/>
	<property name="dir.src.ST" value="${dir.src.test}/ST"/>
	
	<property name="dir.build.test" value="."/>
	<property name="dir.build.UT" value="${dir.build.test}/UT"/>
	<property name="dir.build.IT" value="${dir.build.test}/IT"/>
	<property name="dir.build.ST" value="${dir.build.test}/ST"/>
	<property name="dir.build.report" value="${dir.build.test}/TestOutput"/> 	<!-- defined in unitTest.xml -->
	<property name="dir.build.classes" value="${dir.build.test}/classes"/>
	
	<path id="dir.build.compile">	    
		<fileset dir="${dir.lib}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${dir.lib.compile}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<path id="dir.build.test">	    
		<path refid="dir.build.compile"/>
		<fileset dir="${dir.lib.test}">
			<include name="**/*.jar"/>
		</fileset>  
    <pathelement path="${dir.build.classes}"/>
	</path>
	
	<path id="dir.build.test.ut">	    
		<path refid="dir.build.test"/>
		<pathelement path="${dir.build.UT}"/>	       		      	       		           
	</path>
	
	<!-- ================================================= Clean dist files -->
	<target name="clean-dist">
		<delete dir="${dir.dist}" quiet="true" />
	</target>

	<!-- ================================================= Clean deployed files -->
	<target name="clean-deploy">
		<delete dir="${dir.deploy}" quiet="true"/>
		<delete dir="${dir.tomcat}/work/Catalina/localhost/${ant.project.name}" quiet="true"/>
		<delete dir="${dir.tomcat}/webapps/${ant.project.name}" quiet="true"/>
		<delete file="${dir.tomcat}/webapps/${ant.project.name}.war" quiet="true"/>
	</target>

	<!-- ================================================= clean all files -->
	<target name="clean" depends="clean-dist, clean-deploy" />
	
	
	<!-- ================================================= prepare build folder -->
	<target name="prepare">
		<delete dir="${dir.dist}" quiet="true"/>
		<delete dir="${dir.build.classes}" quiet="true"/>
		<delete dir="${dir.build.UT}" quiet="true"/>
		<mkdir dir="${dir.build.classes}" />
		<mkdir dir="${dir.dist}" />
		<mkdir dir="${dir.dist}/WEB-INF/classes" />
		<mkdir dir="${dir.deploy}" />
	</target>

	<!-- ================================================= compile -->
	<target name="compile">
		<javac target="1.5" source="1.5" debug="true" destdir="${dir.build.classes}" includeantruntime="false">
			<src path="${dir.src.java}" />
			<include name="**/*.java" />
		  <classpath refid="dir.build.compile"/>
		</javac>
		
		<copy toDir="${dir.dist}/WEB-INF/classes" overwrite="true" failonerror="false">
			
			<fileset dir="${dir.build.classes}">
		    <!---exclude name="**/*Test*.*" /-->
			</fileset>			
		</copy>
		
		<copy toDir="${dir.build.UT}" overwrite="true" failonerror="false">
			
			<fileset dir="${dir.build.classes}">
		    <!---exclude name="**/*Test*.*" /-->
			</fileset>			
		</copy>
	
	</target>
	
	<!-- ======================================== copy all needed files to dist -->
	<target name="copy">
		<copy toDir="${dir.dist}">
			<fileset dir="${dir.src.war}">
				<include name="**/*.jar" />
				<include name="**/*.jsp" />
				<include name="**/*.jspf" />
				<include name="**/*.js" />
				<include name="**/*.gif" />
				<include name="**/*.jpg" />
				<include name="**/*.png" />
				<include name="**/*.psd" />
				<include name="**/*.xml" />
				<include name="**/*.properties" />
				<include name="**/*.css" />
				<include name="**/*.pdf" />
				<include name="**/*.dtd" />
				<include name="**/*.tld" />
				<include name="**/*.wsdl" />
				<include name="**/*.htm" />
				<include name="**/*.jhtml" />
				<include name="**/*.html" />
				<exclude name="WEB-INF/config/**" />
				<exclude name="WEB-INF/classes/**" />
			<!-- <exclude name="page/images/**" /> -->
				<exclude name="WEB-INF/web.xml.config/**" />
			</fileset>
		</copy>

		<copy file="${dir.src.WEB-INF}/web.xml.config/web.xml" todir="${dir.dist}/WEB-INF" />
		<copy file="${dir.src.war}/envvalues.bleum.properties" todir="${dir.dist}" overwrite="true" />
		<copy toDir="${dir.dist}/WEB-INF/classes" flatten="true">
			<fileset dir="${dir.src.WEB-INF}/config/">
				<include name="**/*.xml" />
				<include name="**/*.dtd" />
				<include name="**/*.xsd" />
				<include name="**/*.properties" />
			</fileset>
		</copy>

		<replace dir="${dir.dist}" replacefilterfile="${dir.dist}/envvalues.bleum.properties">
			<include name="WEB-INF/web.xml" />
			<include name="WEB-INF/classes/hibernate.cfg.properties" />
			<include name="WEB-INF/classes/log4j.xml" />
			<include name="page/inc/hbx/hbx.jsp" />
			<include name="WEB-INF/classes/advertise-default.xml" />
			<include name="page/inc/fb_connect_common_inc.jsp" />
<!--        <include name="**/*.css" />		for UI branch not implemented on trunk yet, also need update properties same with branch's	 -->
		</replace>
		
<!-- 	<replace file="${dir.dist}/WEB-INF/web.xml"> 
			<replacefilter>
				<replacetoken>/cs</replacetoken>
				<replacevalue>/cs_build</replacevalue>
			</replacefilter>
		</replace> 
-->
	</target>
	
	<!-- ================================================= generate war -->
	<target name="generwar">
		<war destfile="${dir.dist}/../${ant.project.name}.war" basedir="${dir.dist}" webxml="${dir.dist}/WEB-INF/web.xml" />
	</target> 
	
	<!-- ================================================= compile Unit Test -->
	<target name="compile-UT-test">			
		<delete dir="${dir.build.UT}" quiet="true"/>
		<mkdir dir="${dir.build.UT}"/>
		<javac srcdir="${dir.src.UT}" destdir="${dir.build.UT}" source="1.5" target="1.5" nowarn="on" debug="on" includeantruntime="false">
		    <classpath refid="dir.build.test"/>
		</javac>
		<copy toDir="${dir.build.UT}" overwrite="true" failonerror="false">
			<fileset dir="${dir.src.UT}">
				<exclude name="**/*.java"/>
			</fileset>
			<fileset dir="${dir.src.test}/data/UT">
				<include name="**/*.*"/>
			</fileset>
		</copy>
	</target> 
	<!-- ================================================= compile Inregration Test -->	
	<target name="compile-IT-test" depends="build">
		<delete dir="${dir.build.IT}" quiet="true"/>
		<mkdir dir="${dir.build.IT}"/>
		<javac srcdir="${dir.src.IT}" destdir="${dir.build.IT}" source="1.5" target="1.5" nowarn="on" debug="on">
			<classpath refid="dir.build.test"/>		    
		</javac>
		<copy toDir="${dir.build.IT}" overwrite="true" failonerror="false">
			<fileset dir="${dir.src.IT}">
				<exclude name="**/*.java"/>
			</fileset>
			<!--fileset dir="${source.test.dir}/data/IT">
				<include name="**/*.*"/>
			</fileset-->
		</copy>
	</target>
	<!-- ================================================= compile System Test -->		
	<target name="compile-ST-test" depends="build">			
		<delete dir="${dir.build.ST}" quiet="true"/>
		<mkdir dir="${dir.build.ST}"/>
		<javac srcdir="${dir.src.ST}" destdir="${dir.build.ST}" source="1.5" target="1.5" nowarn="on" debug="on">
		    <classpath refid="dir.build.test"/>		    
		</javac>
		<copy toDir="${dir.build.ST}" overwrite="true" failonerror="false">
			<fileset dir="${dir.src.ST}/">
				<exclude name="**/*.java"/>
			</fileset>
			<!--fileset dir="${source.test.dir}/data/ST">
				<include name="**/*.*"/>
			</fileset-->
		</copy>
	</target>

	<!-- ============================================= Unit Test by testng -->
	    <target name="unitTest" depends="compile-UT-test">
	        <ant antfile="subTask_testing\unitTest\unitTest.xml"/>
		<!-- <reference refid="dir.build.test.ut" torefid="cp"/>  inheritAll="true", inherirRefs="true" and reference attributes do not work here -->
		</target>

	<!-- ============================= Cobertura for Unit Testing -->
	    <target name="cobertura-ut">
	        <ant antfile="SubTask_cobertura\cobertura_ut.xml"/>
	    </target>
		
	<!-- ============================= JDepend for src -->
	    <target name="jdepend">
	        <ant antfile="subTask_JDepend\jdepend.xml"/>
	    </target>

	<!-- ============================= FindBugs Build -->
	    <target name="findbugs">
	        <ant antfile="subTask_findbugs\findbugs.xml"/>
	    </target>
		
	<!-- ============================= PMD Check -->
	    <target name="checkPMD">
	        <ant antfile="subTask_PMD\pmdCheck.xml"/>
	    </target>

	<!-- ============================= PMD-CPD Check -->
	    <target name="checkCPD">
	        <ant antfile="subTask_PMD\cpdCheck.xml"/>
	    </target>
	    
	<!-- ============================= Style Check -->
	    <target name="checkstyle">
	        <ant antfile="subTask_checkstyle\checkStyle.xml"/>
	    </target>
		

	<!-- =============================== quick local build , generate a war ! -->
	<target name="warbuild" depends="clean, prepare, copy, compile,generwar" description="build a war"/>
	
	<!-- ================================================= build -->
	<target name="build" depends="prepare, copy, compile,generwar, compile-UT-test, unitTest, checkPMD,checkstyle" description="build source files"/>

	<!-- ================================================= full build -->
	<target name="full-build" depends="clean, build" description="Clean the privious build, then build source files"/>
	
	<!-- ================================================= copy to Tomcat ROOT -->
	<target name="copy-to-tomcat">
		<property name="page.dir" value="${dir.tomcat}/webapps/ROOT/page"/>
		<copy toDir="${dir.deploy}">
			<fileset dir="${dir.dist}" />
		</copy>
		<delete dir="${page.dir}" quiet="true"/>
		<mkdir dir="${page.dir}" />
		<copy toDir="${page.dir}/images" >
			<fileset dir="${dir.dist}/page/images"/>
			<mapper type="identity"/>
		</copy>
		<copy toDir="${page.dir}/images_new" >
			<fileset dir="${dir.dist}/page/images_new"/>
			<mapper type="identity"/>
		</copy>
		<copy toDir="${page.dir}/js" >
			<fileset dir="${dir.dist}/page/js">
				<include name="jquery.js" />
			</fileset>
		</copy>
	</target>

	<!-- ================================================= stop Tomcat -->
	<target name="stop-tomcat">	    
<!-- 	
		<exec executable="${dir.tomcat}/bin/shutdown.bat" failonerror="false" spawn="yes"></exec>
		<exec executable="${dir.tomcat}/bin/startup.bat" failonerror="false" spawn="yes"></exec>
	    <sleep seconds="180"/> 
-->
	    <exec executable="cmd" dir="${dir.tomcat}/bin" spawn="true">  
            <arg value="/c" />  
            <arg value="shutdown.bat" />  
        </exec>
	    <echo message="tomcat stopped"/>		
<!-- 
		<exec executable="SCHTASKS">
			<arg value="/Run"/>
			<arg value="/TN"/>
			<arg value="Tomcat-Stop"/>
		</exec> 
-->
		<sleep seconds="5"/>		
	</target>
	
	<!-- ================================================= start Tomcat -->
	<target name="start-tomcat">
		<exec executable="cmd" dir="${dir.tomcat}/bin">
            <arg value="/c"/>
            <arg value="startup.bat"/>
        </exec>  
	    <echo message="tomcat started"/>
<!-- 
		<exec executable="SCHTASKS">
			<arg value="/Run"/>
			<arg value="/TN"/>
			<arg value="Tomcat-Start"/>
		</exec> 
-->
		<sleep seconds="5"/>
	</target>	

	<!-- ================================================= restart Tomcat -->
	<target name="restart-tomcat" depends="stop-tomcat,clean-deploy,start-tomcat" description="clean a deployed project then restart Tomcat" />

	<!-- ================================================= call Tomcat to deploy -->
	<target name="tomcat" depends="copy-to-tomcat" description="call Tomcat to deploy war app">	
	    <ant antfile="subTask_tomcat\tomcat-deploy.xml">
			<property name="war.dir" value="../"/>
			<property name="app.name" value="${ant.project.name}"/>
			<property name="tomcat.dir" value="E:\Software\apache-tomcat-6.0.33" />
			<property name="tomcat.webapps" value="${tomcat.dir}/webapps" />
			<property name="tomcat.manager.url" value="http://192.168.2.137:8119/manager" />
			<property name="tomcat.manager.username" value="admin" />
			<property name="tomcat.manager.password" value="admin" />
		</ant>
	</target>
	
	<!-- ========================================== start QTP auto-testing-->
	 <target name="qtp">
		<echo message="Run QTP..."/>
		<exec executable="cmd" dir="subTask_QTP">  
           <arg value="/c"/>  
           <arg value="RunQTP.vbs"/>  
		</exec>  
	    <echo message="Finish QTP"/>
		<sleep seconds="10"/>			
	</target>	
	
	<!-- ========================================== write QTP Report2Excel-->
	 <target name="qtp-report">
		<echo message="Write QTP Report2Excel..."/>
		<exec executable="cmd" dir="subTask_QTP">  
           <arg value="/c"/>  
           <arg value="Report2Excel.vbs"/>  
		</exec>  
	    <echo message="Finish writing QTP Report2Excel"/>
		<sleep seconds="10"/>
	</target>
	
	<!-- ================================================= start selenium -->
	<target name="start-selenium-server">	
		<exec executable="cmd.exe" spawn="yes">
		  <arg value="/c"/> 
		  <arg line="java -jar ${lib.dir}/patched-selenium-server.jar"/>
		  <arg line="-port ${selenium.server.port}"/>
		  <arg line="-firefoxProfileTemplate ${selenium.server.profiletemplate}"/>			
		</exec>		
		<echo message="Selenium Remote Control Server Started!"/>
	</target>
	
	<!-- ================================================= deploy -->
	<target name="deploy" depends="build, copy-to-tomcat,restart-tomcat" description="incremental deploy"/>
	
	<!-- ================================================= full deploy -->
	<target name="full-deploy" depends="full-build, copy-to-tomcat,restart-tomcat" description="full deploy"/>
	
</project>