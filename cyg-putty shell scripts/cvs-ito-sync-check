#!/usr/bin/bash
# This script is used for simple check whether any codes updated in ito-CVS daily
echo "Rationale is cvs rdiff -s -D <date> -r HEAD/Branch <project folder> | grep File "
echo "Please do NOT forget updating the <previous tag> for branch projects!"
echo "Currently the main source code are checked on 6 P.M.;Other config/service modules are checked every morning 7 A.M. cron jobs starts working. "
file=~/itosync-daily-check-log.txt
result=~/itosync-daily-check.txt
itocvsroot=":ext:bbu@ito-as1.1fb.net:/vb/cvs"
CS790=CS_7_90 						# update often
AF360=AFF_3_60		 				# update often
AF360_services=AFF_3_60_CAT1		# update often
FS750=FS_7_50 						# update often
# Define the previous tag on branch
CS790Pretag=BLEUM_CS790_SYNC_12242012_1 			# update often
AF360Pretag=BLEUM_AFFINITY_ST_03062013_1 			# update often
AF360_services_root=BLEUM_FS_SYNC_02162013_1		# not update ofter
FS750Pretag=BLEUM_FS_SYNC_03132013_1				# update often
# Define the check period set zone CCT +0800 by manually run on putty env, cron job cannot recognize CCT...
# In putty cvs -D 18:00 CCT equals to cvs -D 10:00 UTC and cvs -D 11:00  (while in win/dos, cvs -D 18:00 CCT == cvs -D 18:00)
# On ito-cvs,there is a zone gap between the moment of real check in, whihc will trigger notification mail and the timestamp recorded in ito-cvs repositoy, the gap is almost 2 hours and a quarter.
if [ "$1" = "cron" ] # executed by system as crontab job
  then
time1="yesterday 12:30 UTC" # prevent our code check in before 20:30 ervery night
time2="yesterday 1:00 UTC"  # prevent duplicate result, since we have second cron job on 9:00 every morning
else # for mannual check on Monday or any time you loke
echo ""
echo "Set the Reference time(usually set last Sat. Morning 7 A.M because that's the time cron suspened till now), default is yesterday 20:30 CCT and yesterday CCT as crontab job routine..."
echo "----------> Do NOT forget add 'CCT'!"
read -p "----------> time1 (e.g. 2012-11-17 7:00 CCT / 2 day ago 7:00 CCT)=" -t 30 time1
time1="${time1:-yesterday 20:30 CCT}"
time2="${time1:-yesterday 9:00 CCT}"
read -p "the previous CCT time you wanna fetch as a refernce ----------> $time1.. PRESS Enter to start compare"
fi

function cvs-rdiff-by-date ()
{
cvs -d $itocvsroot rdiff -s -D "$1" -r "$2" "$3" |grep File \
|awk 'BEGIN{ "date" | getline d; print "--ito-Trunk-'$3'--",d,"----------"}{ {for(j = 2; j<NF; j++) printf "%s ",$j} printf "%s\n",$j} '\
| tee -a $file | wc -l|awk '{print "Total:" $0-1}'| tee -a $file
}
function cvs-rdiff-by-tag ()
{
cvs -d $itocvsroot rdiff -s -r "$1" -r "$2" "$3" |grep File \
|awk 'BEGIN{ "date" | getline d; print "--ito-Branch-'$3'--",d,"--preTag-'$1'--"}{ {for(j = 2; j<NF; j++) printf "%s ",$j} printf "%s\n",$j} '\
| tee -a $file | wc -l|awk '{print "Total:" $0-1}'| tee -a $file
}

rm -rf $file
for module1 in cs afcollagent afcsragent afshared fsagent fscm fsshared services
do
cvs-rdiff-by-date "$time1" "HEAD" $module1
done

for module2 in afservice outputXmlFiles DatabaseXMLfiles fssplashcontent \
ccms afautopay adjustments autopayservice ccmsservice emailservice accountservice textbankingservice ddacifxfer ccacifxfer phoneprocessor \
chancestool chancesanalysisengine
do
cvs-rdiff-by-date "$time2" "HEAD" $module2
done

for module3 in fscm/src fscm/war fssplashcontent/src fssplashcontent/war fsshared/src services/src services/mapping
do
cvs-rdiff-by-tag $FS750Pretag $FS750 $module3
done

for module4 in afcollagent/src afcollagent/war afcsragent/src afcsragent/war afshared/src afshared/war
do
cvs-rdiff-by-tag $AF360Pretag $AF360 $module4
done

for module5 in services/src services/mapping
do
cvs-rdiff-by-tag $AF360Pretag $AF360_services $module5
done

for module6 in fsshared/src
do
cvs-rdiff-by-tag $AF360Pretag $AF360_services $module6
done

# for module5 in cs/src cs/war
# do
# cvs-rdiff-by-tag $CS790Pretag $CS790 $module5
# done

# for module6 in afcollagent/src afcollagent/war afcsragent/src afcsragent/war afshared/src afshared/war
# do
# cvs-rdiff-by-tag $AF360Pretag $AF360 $module6
# done

# Generate simple result, alias as "sync"
cat $file |grep -v "Total:0" | grep -v "\--ito-Trunk-" | grep -v "\--ito-Branch-" \
|awk 'BEGIN{ "date" | getline d; print "----SYNC*LIST----",d,"--for more detail,plz check '$file'... "} {print $0}' > $result
