#!/usr/bin/bash
# This script is used for sorting the file list and making a comparison between the one generated by CM script(ruby) && CVS Rdiff(shell)
echo "Rationale is cat <filelist> |grep -v '\[.*files\]' | sort -u | awk '/^[A-Za-z]/ {print $0}' > <output file>"
echo "cat <filelist2> |awk '/^[A-Za-z0-9]/ {print $1}' | sort -u > <output file2>"
echo "comm -3 <output file> <output file2>"
echo ""
echo "!! In order to fetch the correct file list, make sure to run ~/bin/cvs-local-check-update for this build/release withOUT Interuption Nor Switching !! "
echo ""
echo "By default, there no need to input any param,it will auto diff the ruby file list and cvs update file list before check in for this build"
echo ""
echo "Optional Param suffix:1.f--diff with final file list,2.n--diff normal and regular files,3.r--diff SYA and SYM of ruby-file-list and roughly generate the common part."
echo ""
echo "Make sure you do this one module by another, because e.g. once combine afcoll,afcsr,afshared file list together, there maybe duplicate files both in SYM or SYA, since afcoll and afcsr have many files with same name, so in order to keep the result more accurate, please do 'cvs-local-filelist-compare <f/r>' one module one time."
echo ""
read -p "Are you ready,if compare *final filelist*, please add suffix Param 'f/n/r' and create 'temp.txt' first.."
file0=~/update_filelist.txt
file1=temp-ruby-filelist.txt
file2=temp-cvs-filelist.txt
compare1=general-ruby-filelist.txt
compare2=general-cvs-filelist.txt
output=compare-result-filelist.txt

function copy-cvs-file-list()
{
echo "--Start diffing--"
echo "--Copy update_filelist to current folder, renamed as '$2'--"
cp $file0 $1
}

function check-target()
{
echo "--Check whether '$1' and '$2' shows up in current folder--"
if [ ! -f $1 ]
 then
echo "!!Cannot find the target '$1',please do compare again!" && exit 1 
fi
if [ ! -f $2 ]
 then
echo "!!Cannot find the target '$2',please do compare again!" && exit 1 
fi
}

function sort-ruby-filelist()
{
echo "--Starting sorting ruby file lists--"
cat $1 |grep -v '\[.*files\]' | awk '{print $2}' | sort -u | awk '/^[A-Za-z]/ {print $0}' > $2
rm temp-ruby-filelist.txt # Not using $file1 here, since i do not want to delete temp.txt when drafting final file list($file1 is a variable)
echo ""
}

function sort-cvs-filelist()
{
echo "--Starting sorting cvs file lists--"
cat $1 |awk '/^[A-Za-z0-9]/ {print $1}' | sort -u > $2
rm temp-cvs-filelist.txt # Just delete the temp file
echo ""
}

function sort-normal-file()
{
echo "--Starting sorting regular files--"
cat $1 | sort -u > $2
echo ""
}

function compare-files ()
{
echo "--Starting finding differences--"
comm -3 $1 $2 | tee $3 # '-3' means to diff those files which are not existing in both file list
echo ""
echo "--Finish diffing,see the '$3' for reference. "
}

function find-common()
{
echo "--Start generating the common part by using bash/shell:join--"
join -t "$4" $1 $2 | tee $3
echo ""
echo "--Finish generating common part,see the '$3' for reference. Not 100% accurate, take care!"
}

case $1 in
  "f")
			file1="temp.txt"
			copy-cvs-file-list $file2
			check-target $file1 $file2
			sort-ruby-filelist $file1 $compare1
			sort-cvs-filelist $file2 $compare2
			compare-files $compare1 $compare2 $output
			;;
  "n")
			read -p "first target file:" file1
			read -p "second target file:" file2
			compare1=compare-1.txt
			compare2=compare-2.txt
			output=compare-result.txt
			check-target $file1 $file2
			sort-normal-file $file1 $compare1
			sort-normal-file $file2 $compare2
			compare-files $compare1 $compare2 $output
			;;
  "r")
			file0=temp.txt
			file1=SYA.txt
			file2=SYM.txt
			compare1=compare-SYA.txt
			compare2=compare-SYM.txt
			output=compare-result.txt
			common=common-part.txt
			cat $file0 | awk '/^A[^B]/ {print $0}'> $file1 # only list SYA
			cat $file0 | awk '/^M/ {print $0}' > $file2 # list SYM
			check-target $file0			
			check-target $file1 $file2
			sort-ruby-filelist $file1 $compare1
			sort-ruby-filelist $file2 $compare2
			compare-files $compare1 $compare2 $output
			echo "total SYA and SYM files number:"
			cat $file0 | grep -v "D    " | grep -v "AB   " | wc -l
			echo "different files number(duplicate number should use the num above minus the num below):"
			cat $output |wc -l
			echo ""
			find-common $compare1 $compare2 $common '' # '' is the separate character used by join
			;;
	*)
			cat bleumModule*.txt >>  $file1
			copy-cvs-file-list $file2
			check-target "bleumModule1.txt" $file2 
# check whether there is any file list generated by ruby, instead $file1 here,because 'cat bleumModule*.txt >> $file1' will auto create a blank file
			sort-ruby-filelist $file1 $compare1
			sort-cvs-filelist $file2 $compare2
			compare-files $compare1 $compare2 $output
			;;
esac