<?xml version="1.0" encoding="UTF-8"?>

<project name="project" default="run" basedir="." >
    <target name="checkOS">
        <condition property="os.linux">
            <os family="unix" />
        </condition>
        <condition property="os.windows">
            <os family="windows" />
        </condition>
    </target>

    <target name="getLinuxBit" depends="checkOS" if="os.linux">
        <exec executable="/bin/bash" outputproperty="linux-bit">
            <arg value="-c" />
            <arg value="getconf LONG_BIT" />
        </exec>
    </target>

    <!-- main job 1, check user's system OS and judge whether it is a 32 bit or 64 bit PC -->
    <target name="checkOSBit" depends="getLinuxBit">
        <property environment="env" />
        <condition property="linux.32">
            <and>
                <equals arg1="os.linux" arg2="true" />   
                <equals arg1="${linux-bit}" arg2="32" />
            </and>
        </condition>
        <condition property="linux.64">
            <and>
                <equals arg1="os.linux" arg2="true" />
                <equals arg1="${linux-bit}" arg2="64" />
            </and>
        </condition>
        <condition property="win.32">
            <and>
                <equals arg1="os.windows" arg2="true" />
                <not>
                    <contains string="${env.ProgramFiles(x86)}" substring="Program Files (x86)" />
                </not>
            </and>
        </condition>
        <condition property="win.64">
            <and>
                <equals arg1="os.windows" arg2="true" />
                <contains string="${env.ProgramFiles(x86)}" substring="Program Files (x86)" />
            </and>
        </condition>
    </target>

    <target name="checkMVNSettings" >
            <available file="${user.home}/.m2/settings.xml" property="has.mvn.settings"/>   
            <available file="${user.home}/.m2/settings.xml.old" property="has.mvn.settings.old"/>   
    </target>

    <target name="copy-settings-old" if="has.mvn.settings" >
        <copy file="${user.home}/.m2/settings.xml" tofile="${user.home}/.m2/settings.xml.old" overwrite="true" />      
        <copy file="settings.xml" toDir="${user.home}/.m2" overwrite="true" />
    </target>

    <target name="copy-settings" unless="has.mvn.settings" >
        <copy file="settings.xml" toDir="${user.home}/.m2" overwrite="true" />
    </target>

    <target name="copy_settings" depends="copy-settings-old,copy-settings" />

    <!-- main job 2, if first time run bat, then initial the .m2/settings.xml and back up user's old settings.xml to settings.xml.old -->
    <target name="copy_mvn_settings" depends="checkMVNSettings" unless="has.mvn.settings.old" >
        <antcall target="copy_settings" />
    </target>        

    <target name="checkieDriver" >
        <available file="webDriverServer/IEDriverServer-32bit.exe" property="ieDriver_NotSet"/>
    </target>

    <target name="set_ie_driver64" if="win.64">
        <delete file="webDriverServer/IEDriverServer-32bit.exe" />
    </target>   

    <target name="set_ie_driver32" unless="win.64">
        <move file="webDriverServer/IEDriverServer-32bit.exe" tofile="webDriverServer/IEDriverServer.exe" overwrite="true" />
    </target>

    <target name="set_ie_driver_32or64" depends="set_ie_driver64,set_ie_driver32" />
    
    <!-- main job 3, if first time run bat, then substtitute the ieDriver depends on your system bits -->
    <target name="set_ie_driver" depends="checkieDriver" if="ieDriver_NotSet" >
        <antcall target="set_ie_driver_32or64" />
    </target>

    <!-- summerize tasks here -->
    <target name="antrun" depends="checkOSBit,set_ie_driver" />
    <target name="run" depends="checkOSBit,copy_mvn_settings,set_ie_driver" />
</project>